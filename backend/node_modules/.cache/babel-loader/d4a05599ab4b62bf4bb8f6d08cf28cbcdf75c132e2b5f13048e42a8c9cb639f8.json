{"ast":null,"code":"var _jsxFileName = \"/Users/tangiansen/Desktop/development/tiktok2324/backend/src/ShowProducts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport supabase from './supabaseClient'; // Import your Supabase client instance here\nimport Product from './Product';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShowProducts({\n  uuid\n}) {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [commentText, setCommentText] = useState('');\n  const [selectedProductId, setSelectedProductId] = useState(null);\n  const [reviewsData, setReviewsData] = useState({});\n  useEffect(() => {\n    // Fetch products associated with the given UUID\n    async function fetchProducts() {\n      const {\n        data,\n        error\n      } = await supabase.from('products').select('id, description, price').eq('user_seller', uuid);\n      if (error) {\n        console.error('Error fetching products:', error.message);\n      } else {\n        setProducts(data);\n      }\n    }\n\n    // Call the fetchProducts function when the component mounts\n    fetchProducts();\n  }, [uuid]);\n  useEffect(() => {\n    // Fetch reviews associated with each product and store them in reviewsData\n    async function fetchReviews() {\n      const reviews = {};\n      for (const product of products) {\n        const {\n          data,\n          error\n        } = await supabase.from('reviews').select('description').eq('product_id', product.id);\n        if (!error) {\n          reviews[product.id] = data;\n        }\n      }\n      setReviewsData(reviews);\n    }\n\n    // Call the fetchReviews function when products are fetched\n    if (products.length > 0) {\n      fetchReviews();\n    }\n  }, [products]);\n  const handleCommentClick = productId => {\n    // Set the selected product ID for adding a comment\n    setSelectedProductId(productId);\n  };\n  const handleAddComment = async e => {\n    e.preventDefault();\n    // Check if a product is selected for commenting\n    if (selectedProductId === null) {\n      return;\n    }\n    const number = Math.floor(Math.random() * 1000);\n\n    // Perform the comment insertion here using Supabase\n    const {\n      error\n    } = await supabase.from('reviews').insert({\n      id: number,\n      description: commentText,\n      product_id: selectedProductId\n    });\n    if (error) {\n      console.error('Error adding comment:', error.message);\n    } else {\n      // Clear the comment text and reset the selected product\n      setCommentText('');\n      setSelectedProductId(null);\n      console.log('Comment added successfully.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mainHeader\",\n      children: [\"Products for User \", uuid]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Product ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), \" \", product.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), \" \", product.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), \" $\", product.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCommentClick(product.id),\n          className: \"button primary\",\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), selectedProductId === product.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: commentText,\n              onChange: e => setCommentText(e.target.value),\n              className: \"comment-input\",\n              placeholder: \"Enter your comment...\",\n              style: {\n                color: 'black'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddComment,\n              type: \"submit\",\n              children: \"Post Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this), reviewsData[product.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reviews\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Reviews:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: reviewsData[product.id].map((review, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: review.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 23\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(ShowProducts, \"2kgS22i19+zlCv83YhpsaeL456A=\");\n_c = ShowProducts;\nexport default ShowProducts;\nvar _c;\n$RefreshReg$(_c, \"ShowProducts\");","map":{"version":3,"names":["React","useEffect","useState","supabase","Product","jsxDEV","_jsxDEV","ShowProducts","uuid","_s","products","setProducts","commentText","setCommentText","selectedProductId","setSelectedProductId","reviewsData","setReviewsData","fetchProducts","data","error","from","select","eq","console","message","fetchReviews","reviews","product","id","length","handleCommentClick","productId","handleAddComment","e","preventDefault","number","Math","floor","random","insert","description","product_id","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","price","onClick","value","onChange","target","placeholder","style","color","type","review","index","_c","$RefreshReg$"],"sources":["/Users/tangiansen/Desktop/development/tiktok2324/backend/src/ShowProducts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport supabase from './supabaseClient'; // Import your Supabase client instance here\nimport Product from './Product';\n\nfunction ShowProducts({ uuid }) {\n  const [products, setProducts] = useState([]);\n  const [commentText, setCommentText] = useState('');\n  const [selectedProductId, setSelectedProductId] = useState(null);\n  const [reviewsData, setReviewsData] = useState({});\n\n  useEffect(() => {\n    // Fetch products associated with the given UUID\n    async function fetchProducts() {\n      const { data, error } = await supabase\n        .from('products')\n        .select('id, description, price')\n        .eq('user_seller', uuid);\n\n      if (error) {\n        console.error('Error fetching products:', error.message);\n      } else {\n        setProducts(data);\n      }\n    }\n\n    // Call the fetchProducts function when the component mounts\n    fetchProducts();\n  }, [uuid]);\n\n  useEffect(() => {\n    // Fetch reviews associated with each product and store them in reviewsData\n    async function fetchReviews() {\n      const reviews = {};\n      for (const product of products) {\n        const { data, error } = await supabase\n          .from('reviews')\n          .select('description')\n          .eq('product_id', product.id);\n        if (!error) {\n          reviews[product.id] = data;\n        }\n      }\n      setReviewsData(reviews);\n    }\n\n    // Call the fetchReviews function when products are fetched\n    if (products.length > 0) {\n      fetchReviews();\n    }\n  }, [products]);\n\n  const handleCommentClick = (productId) => {\n    // Set the selected product ID for adding a comment\n    setSelectedProductId(productId);\n  };\n\n  const handleAddComment = async (e) => {\n    e.preventDefault();\n    // Check if a product is selected for commenting\n    if (selectedProductId === null) {\n      return;\n    }\n\n    const number = Math.floor(Math.random() * 1000);\n\n    // Perform the comment insertion here using Supabase\n    const { error } = await supabase\n      .from('reviews')\n      .insert({\n        id: number,\n        description: commentText,\n        product_id: selectedProductId,\n      });\n\n    if (error) {\n      console.error('Error adding comment:', error.message);\n    } else {\n      // Clear the comment text and reset the selected product\n      setCommentText('');\n      setSelectedProductId(null);\n      console.log('Comment added successfully.');\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h2 className=\"mainHeader\">Products for User {uuid}</h2>\n      <ul>\n        {products.map((product) => (\n          <li key={product.id} className=\"card\">\n            <p className=\"text-lg\">\n              <strong>Product ID:</strong> {product.id}\n            </p>\n            <p className=\"description\">\n              <strong>Description:</strong> {product.description}\n            </p>\n            <p className=\"text-sm\">\n              <strong>Price:</strong> ${product.price}\n            </p>\n            <button\n              onClick={() => handleCommentClick(product.id)}\n              className=\"button primary\"\n            >\n              Add Comment\n            </button>\n            {selectedProductId === product.id && (\n              <div>\n                <form>\n                  <textarea\n                    value={commentText}\n                    onChange={(e) => setCommentText(e.target.value)}\n                    className=\"comment-input\"\n                    placeholder=\"Enter your comment...\"\n                    style={{ color: 'black' }}\n                  />\n                  <button onClick={handleAddComment} type=\"submit\"> \n                    Post Comment\n                  </button>\n                </form>\n              </div>\n            )}\n\n            {/* Map through the reviewsData for this product */}\n            {reviewsData[product.id] && (\n              <div className=\"reviews\">\n                <h3>Reviews:</h3>\n                <ul>\n                  {reviewsData[product.id].map((review, index) => (\n                    <li key={index}>\n                      <p>{review.description}</p>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default ShowProducts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}