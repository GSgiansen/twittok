{"ast":null,"code":"var _jsxFileName = \"/Users/tangiansen/Desktop/development/tiktok2324/frontend/src/ShowProducts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport supabase from './supabaseClient'; // Import your Supabase client instance here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShowProducts({\n  uuid\n}) {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [commentText, setCommentText] = useState('');\n  const [selectedProductId, setSelectedProductId] = useState(null);\n  useEffect(() => {\n    // Fetch products associated with the given UUID\n    async function fetchProducts() {\n      const {\n        data,\n        error\n      } = await supabase.from('products').select('id, description, price').eq('user_seller', uuid);\n      if (error) {\n        console.error('Error fetching products:', error.message);\n      } else {\n        setProducts(data);\n      }\n    }\n\n    // Call the fetchProducts function when the component mounts\n    fetchProducts();\n  }, [uuid]);\n  const handleCommentClick = productId => {\n    // Set the selected product ID for adding a comment\n    setSelectedProductId(productId);\n  };\n  const handleAddComment = async () => {\n    // Check if a product is selected for commenting\n    if (selectedProductId === null) {\n      return;\n    }\n    console.log(\"productId is \", selectedProductId);\n\n    // Perform the comment insertion here using Supabasex\n    const {\n      data,\n      error\n    } = await supabase.from('reviews').insert({\n      id: Math.floor(Math.random() * 1000),\n      product_id: selectedProductId,\n      description: commentText\n    });\n    if (error) {\n      console.error('Error adding comment:', error.message);\n    } else {\n      // Clear the comment text and reset the selected product\n      setCommentText('');\n      setSelectedProductId(null);\n      console.log('Comment added successfully.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mainHeader\",\n      children: [\"Products for User \", uuid]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Product ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), \" \", product.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), \" \", product.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), \" $\", product.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCommentClick(product.id),\n          className: \"button primary\",\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), selectedProductId === product.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: commentText,\n            onChange: e => setCommentText(e.target.value),\n            className: \"comment-input\",\n            placeholder: \"Enter your comment...\",\n            style: {\n              color: 'black'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddComment,\n            className: \"button\",\n            type: \"submit\",\n            children: \"Post Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(ShowProducts, \"5sMO7RXj2JJB1WXaQCMJxJd9nDg=\");\n_c = ShowProducts;\nexport default ShowProducts;\nvar _c;\n$RefreshReg$(_c, \"ShowProducts\");","map":{"version":3,"names":["React","useEffect","useState","supabase","jsxDEV","_jsxDEV","ShowProducts","uuid","_s","products","setProducts","commentText","setCommentText","selectedProductId","setSelectedProductId","fetchProducts","data","error","from","select","eq","console","message","handleCommentClick","productId","handleAddComment","log","insert","id","Math","floor","random","product_id","description","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","product","price","onClick","value","onChange","e","target","placeholder","style","color","type","_c","$RefreshReg$"],"sources":["/Users/tangiansen/Desktop/development/tiktok2324/frontend/src/ShowProducts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport supabase from './supabaseClient'; // Import your Supabase client instance here\n\nfunction ShowProducts({ uuid }) {\n  const [products, setProducts] = useState([]);\n  const [commentText, setCommentText] = useState('');\n  const [selectedProductId, setSelectedProductId] = useState(null);\n\n  useEffect(() => {\n    // Fetch products associated with the given UUID\n    async function fetchProducts() {\n      const { data, error } = await supabase\n        .from('products')\n        .select('id, description, price')\n        .eq('user_seller', uuid);\n\n      if (error) {\n        console.error('Error fetching products:', error.message);\n      } else {\n        setProducts(data);\n      }\n    }\n\n    // Call the fetchProducts function when the component mounts\n    fetchProducts();\n  }, [uuid]);\n\n  const handleCommentClick = (productId) => {\n    // Set the selected product ID for adding a comment\n    setSelectedProductId(productId);\n  };\n\n  const handleAddComment = async () => {\n    // Check if a product is selected for commenting\n    if (selectedProductId === null) {\n      return;\n    }\n    console.log(\"productId is \" , selectedProductId)\n\n    // Perform the comment insertion here using Supabasex\n    const { data, error } = await supabase\n      .from('reviews')\n      .insert(\n        {\n          id: Math.floor(Math.random() * 1000),\n          product_id: selectedProductId,\n          description: commentText,\n        },\n      );\n\n    if (error) {\n      console.error('Error adding comment:', error.message);\n    } else {\n      // Clear the comment text and reset the selected product\n      setCommentText('');\n      setSelectedProductId(null);\n      console.log('Comment added successfully.');\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h2 className=\"mainHeader\">Products for User {uuid}</h2>\n      <ul>\n        {products.map((product) => (\n          <li key={product.id} className=\"card\">\n            <p className=\"text-lg\">\n              <strong>Product ID:</strong> {product.id}\n            </p>\n            <p className=\"description\">\n              <strong>Description:</strong> {product.description}\n            </p>\n            <p className=\"text-sm\">\n              <strong>Price:</strong> ${product.price}\n            </p>\n            <button\n              onClick={() => handleCommentClick(product.id)}\n              className=\"button primary\"\n            >\n              Add Comment\n            </button>\n            {selectedProductId === product.id && (\n              <div>\n                <textarea\n                  value={commentText}\n                  onChange={(e) => setCommentText(e.target.value)}\n                  className=\"comment-input\"\n                  placeholder=\"Enter your comment...\"\n                  style={{ color: 'black' }}\n                />\n                <button onClick={handleAddComment} className=\"button\" type=\"submit\"> \n                  Post Comment\n                </button>\n              </div>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default ShowProducts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}